'''
1. 문제 설명
N명에 대한 모험가에 대한 정보가 주어졌을 때,
여행을 떠날 수 있는 그룹 수의 최댓값을 구하기

- 입력 :
모험가 수
각 모험가의 공포도
- 출력 :
그룹수의 최댓값

2. 어떤 알고리즘인지
Greedy

3. 어떻게 코드로 구현했는지
1) 오름차순 정렬
공포도 가장 낮은 모험가부터 확인
2) 앞에서부터 공포도를 하나씩 확인

현재 그룹에 포함된 모험가 수 >= 현재 확인하고 있는 공포도
-> 그룹으로 설정
'''

n = int(input())
data = list(map(int, input().split()))
data.sort
result = 0 # 총 그룹의 수
count = 0 # 현재 그룹에 포함된 모험가의 수

for i in data : # 공포도를 낮은 것부터 하나씩 확인하며
  count += 1 # 현재 그룹에 해당 모험가를 포함시키기
  if count >= i : # 현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상이라면 그룹 결성
    result += 1 # 총 그룹의 수 증가시키기
    count = 0

print(result)
